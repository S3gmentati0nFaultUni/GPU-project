% ATRICLES
@article{maze-generation,
  author  = {Inoue, Kohei and Urahama, Kiichi},
  year    = {2008},
  month   = {09},
  pages   = {1435-1438},
  title   = {Halftone Representation with Random Maze Pattern Based on Centroidal
             Voronoi Tessellations and Minimum Spanning Trees},
  volume  = {62},
  journal = {The Journal of The Institute of Image Information and Television
             Engineers},
  doi     = {10.3169/itej.62.1435}
}

@article{tsp-christofides,
  author  = {Christofides, Nicos},
  title   = {Worst-Case Analysis of a New Heuristic for the Travelling Salesman
             Problem},
  journal = {Operations Research Forum},
  year    = {2022},
  month   = {03},
  day     = {03},
  volume  = {3},
  number  = {1},
  pages   = {20},
  issn    = {2662-2556},
  doi     = {10.1007/s43069-021-00101-z},
  url     = {https://doi.org/10.1007/s43069-021-00101-z}
}

@inproceedings{mst-segmentation-heuristic,
  author    = {Wassenberg, Jan and Middelmann, Wolfgang and Sanders, Peter},
  editor    = {Jiang, Xiaoyi and Petkov, Nicolai},
  title     = {An Efficient Parallel Algorithm for Graph-Based Image Segmentation},
  booktitle = {Computer Analysis of Images and Patterns},
  year      = {2009},
  publisher = {Springer Berlin Heidelberg},
  address   = {Berlin, Heidelberg},
  pages     = {1003--1010},
  isbn      = {978-3-642-03767-2}
}

@article{prim-algorithm,
  author   = {Prim, R. C.},
  journal  = {The Bell System Technical Journal},
  title    = {Shortest connection networks and some generalizations},
  year     = {1957},
  volume   = {36},
  number   = {6},
  pages    = {1389-1401},
  keywords = {},
  doi      = {10.1002/j.1538-7305.1957.tb01515.x}
}

@article{kruskal-algorithm,
  issn      = {00029939, 10886826},
  url       = {http://www.jstor.org/stable/2033241},
  author    = {Joseph B. Kruskal},
  journal   = {Proceedings of the American Mathematical Society},
  number    = {1},
  pages     = {48--50},
  publisher = {American Mathematical Society},
  title     = {On the Shortest Spanning Subtree of a Graph and the Traveling
               Salesman Problem},
  urldate   = {2024-10-04},
  volume    = {7},
  year      = {1956}
}

@article{boruvka-pseudocode,
  author  = {Vijayan, Darveen and Aziz, Izzatdin},
  year    = {2022},
  month   = {12},
  pages   = {1-14},
  title   = {Adaptive Hierarchical Density-Based Spatial Clustering Algorithm for
             Streaming Applications},
  volume  = {4},
  journal = {Telecom},
  doi     = {10.3390/telecom4010001}
}

@article{boruvka-ackermann,
  author     = {Chazelle, Bernard},
  title      = {A minimum spanning tree algorithm with inverse-Ackermann type
                complexity},
  year       = {2000},
  issue_date = {Nov. 2000},
  publisher  = {Association for Computing Machinery},
  address    = {New York, NY, USA},
  volume     = {47},
  number     = {6},
  issn       = {0004-5411},
  url        = {https://doi.org/10.1145/355541.355562},
  doi        = {10.1145/355541.355562},
  journal    = {J. ACM},
  month      = nov,
  pages      = {1028–1047},
  numpages   = {20},
  keywords   = {graphs, matroids, minimum spanning trees}
}

@article{karger-klein-tarjan,
  author     = {Karger, David R. and Klein, Philip N. and Tarjan, Robert E.},
  title      = {A randomized linear-time algorithm to find minimum spanning trees},
  year       = {1995},
  issue_date = {March 1995},
  publisher  = {Association for Computing Machinery},
  address    = {New York, NY, USA},
  volume     = {42},
  number     = {2},
  issn       = {0004-5411},
  url        = {https://doi.org/10.1145/201019.201022},
  doi        = {10.1145/201019.201022},
  journal    = {J. ACM},
  month      = mar,
  pages      = {321–328},
  numpages   = {8},
  keywords   = {randomized algorithm, minimum spanning tree, matroid}
}

@inproceedings{boruvka-steps,
  author    = {Sun Chung and Condon, A.},
  booktitle = {Proceedings of International Conference on Parallel Processing},
  title     = {Parallel implementation of Bouvka's minimum spanning tree algorithm},
  year      = {1996},
  volume    = {},
  number    = {},
  pages     = {302-308},
  keywords  = {Costs;Parallel algorithms;Algorithm design and analysis;Load
               management;Packaging machines},
  doi       = {10.1109/IPPS.1996.508073}
}

@inproceedings{generic-he-boruvka,
  author    = {Mariano, Artur and Proenca, Alberto and Da Silva Sousa, Cristiano},
  booktitle = {2015 23rd Euromicro International Conference on Parallel,
               Distributed, and Network-Based Processing},
  title     = {A Generic and Highly Efficient Parallel Variant of Boruvka's
               Algorithm},
  year      = {2015},
  volume    = {},
  number    = {},
  pages     = {610-617},
  keywords  = {Graphics processing units;Arrays;Algorithm design and
               analysis;Kernel;Instruction
               sets;Color;boruvka;gpu;performance;parallel;minimum spanning tree},
  doi       = {10.1109/PDP.2015.72}
}

@inproceedings{parprefix,
  title  = {Parallel Prefix Sum (Scan) with CUDA},
  author = {Mark J. Harris},
  year   = {2011},
  url    = {https://api.semanticscholar.org/CorpusID:262402762}
}

@incollection{gpu-programming-cuda,
  title     = {Chapter 6 - GPU programming: CUDA},
  editor    = {Gerassimos Barlas},
  booktitle = {Multicore and GPU Programming (Second Edition)},
  publisher = {Morgan Kaufmann},
  edition   = {Second Edition},
  address   = {Philadelphia},
  pages     = {389-581},
  year      = {2023},
  isbn      = {978-0-12-814120-5},
  doi       = {https://doi.org/10.1016/B978-0-12-814120-5.00015-9},
  url       = {https://www.sciencedirect.com/science/article/pii/B9780128141205000159},
  author    = {Gerassimos Barlas},
  keywords  = {CUDA, GPU memory hierarchy, streaming multiprocessor, CUDA
               optimization, GPU shared memory, CUDA graphs, coopeative groups,
               warp functions, CUDA and MPI},
  abstract  = {Since GPU computation burst into the scene in the mid 2000s, it
               has taken the high-performance computing by storm. GPUs offer a
               leap in performance that makes tackling bigger and more difficult
               problems feasible. In addition, GPUs offer unparallel power
               efficiency in terms of TFlop/Watt, a feature that is becoming all
               the more relevant in a world of dwindling natural resources. The
               only problem is that GPU architectures are a breed apart from
               traditional multicore CPUs. Thousands of cores, coupled with
               complex hierarchies of memory subsystems, constitute their
               efficient programming a challenge requiring specialized software
               platforms. In this chapter we cover one of the most mature and
               feature-rich software platforms for this task: NVidia's CUDA.
               Additionally, we show through a series of case studies, how CUDA
               can be combined with MPI to produce software systems that span
               clusters of GPU machines while taking advantage of other
               state-of-the-art software tools.}
}

@article{csr-kelly,
  author = {Terence Kelly},
  title  = {Programming Workbench - Compressed Sparse Row Format for Representing Graphs},
  year   = {2020}
}

@inproceedings{csr-wheatman,
  author    = {Wheatman, Brian and Xu, Helen},
  booktitle = {2018 IEEE High Performance extreme Computing Conference (HPEC)},
  title     = {Packed Compressed Sparse Row: A Dynamic Graph Representation},
  year      = {2018},
  volume    = {},
  number    = {},
  pages     = {1-7},
  keywords  = {Arrays;Sparse matrices;Benchmark testing;Indexes;Facebook;Computer science;sparse graphs;sparse matrices;storage formats;compressed sparse row;packed memory array;dynamic data structures},
  doi       = {10.1109/HPEC.2018.8547566}
}

@inproceedings{mst-bipartite,
  author    = {de Alencar Vasconcellos, Jucele França and Cáceres, Edson Norberto and Mongelli, Henrique and Song, Siang Wun},
  booktitle = {2017 International Symposium on Computer Architecture and High Performance Computing Workshops (SBAC-PADW)},
  title     = {A Parallel Algorithm for Minimum Spanning Tree on GPU},
  year      = {2017},
  volume    = {},
  number    = {},
  pages     = {67-72},
  keywords  = {Bipartite graph;Graphics processing units;Parallel algorithms;Algorithm design and analysis;Vegetation;Transforms;minimum spanning tree;parallel algorithm;GPU},
  doi       = {10.1109/SBAC-PADW.2017.20}
}

@inproceedings{prim-parallel,
  title  = {Parallel Minimum Spanning Tree Algorithm},
  author = {Xiwen Chen},
  year   = {2011},
  url    = {https://api.semanticscholar.org/CorpusID:35108055}
}

@inproceedings{filter-kruskal,
  author    = {Osipov, Vitaly and Sanders, Peter and Singler, Johannes},
  title     = {The Filter-Kruskal minimum spanning tree algorithm},
  year      = {2009},
  publisher = {Society for Industrial and Applied Mathematics},
  address   = {USA},
  abstract  = {We present Filter-Kruskal -- a simple modification of Kruskal's algorithm that avoids sorting edges that are "obviously" not in the MST. For arbitrary graphs with random edge weights Filter-Kruskal runs in time O(m + n log n log m/n), i.e. in linear time for not too sparse graphs. Experiments indicate that the algorithm has very good practical performance over the entire range of edge densities. An equally simple parallelization seems to be the currently best practical algorithm on multicore machines.},
  booktitle = {Proceedings of the Meeting on Algorithm Engineering \& Expermiments},
  pages     = {52–61},
  numpages  = {10},
  location  = {New York, New York}
}





% WEB RESOURCES
@misc{mst-applications,
  title = {Applications of minimum spanning trees},
  url   = {https://personal.utdallas.edu/~besp/teaching/mst-applications.pdf}
}

@misc{t4-info,
  title = {NVIDIA T4 70W LOW PROFILE PCIe GPU ACCELERATOR},
  url   = {https://www.nvidia.com/content/dam/en-zz/Solutions/Data-Center/tesla-t4/t4-tensor-core-product-brief.pdf?ncid=no-ncid}
}

@misc{t4-product-brief,
  title = {NVIDIA T4, TENSOR CORE GPU},
  url   = {https://www.nvidia.com/content/dam/en-zz/Solutions/Data-Center/tesla-t4/t4-tensor-core-datasheet-951643.pdf}
}